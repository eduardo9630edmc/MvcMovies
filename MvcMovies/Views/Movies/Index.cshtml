@model MvcMovies.Models.MovieGenreViewModel
@* de esta forma se inyecta el token mediante IAntiforgery para utilizarlo ej javaScript, para obtenerlo se llama al método GetAndStoreTokens  *@
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery
@{
    ViewData["Title"] = "Index";
}

<!-- Modal add-->
<div class="modal fade" id="addModal" tabindex="-1" aria-labelledby="addModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="addModalLabel">Agregar Peliculas</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" onclick="$('#btnCancelCreate').resetValidation()"></button>
            </div>
            <div class="modal-body">
                <partial name="_Create" for="Movie"/>
            </div>
            @*<div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary">Save changes</button>
            </div>*@
        </div>
    </div>
</div>

<!-- Modal edit-->
<div class="modal fade" id="editModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="editModallLabel">Editar Peliculas</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" onclick="$('#btnCancelEdit').resetValidation()"></button>
            </div>
            <div class="modal-body">
                <div id="partialEdit">
                    <partial name="_Edit" for="Movie" />
                </div>               
            </div>
            @*<div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            <button type="button" class="btn btn-primary">Save changes</button>
            </div>*@
        </div>
    </div>
</div>

<h1>Index</h1>

<button type="button" class="btn btn-primary my-2" data-bs-toggle="modal" data-bs-target="#addModal">
    Crear Nuevo
</button>
@*<p>
    <a asp-action="Create" class="btn btn-primary">Crear Nuevo</a>
</p>*@
@using (Html.AjaxBeginForm("Search", null, new AjaxOptions
 {
     HttpMethod = "post",
     InsertionMode = InsertionMode.Replace,
     UpdateTargetId = "MovieList",
     OnBegin = "showLoading()",
     OnComplete = "hideLoading"
 },new{ })
)
{
    <div class="row pb-2" id="searchForm">
        <div class="col-2">
            <select asp-for="MovieGenre" asp-items="Model.Genres" class="form-select">
                <option value="">All</option>
            </select>
        </div>
        <div class="col-5 d-flex">
            <input class="form-control me-2" type="search" placeholder="Search" aria-label="Search" name="SearchString">
            <button class="btn btn-outline-success" type="submit" onclick="">Search</button>
        </div>
    </div>
}

<div id="MovieList">
    <partial name="_MovieList" for="Movies"/>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(function(){

            
            
        });
        function onSuccedAction(formidden){
            $('#' + formidden).click();
            if (formidden === 'btnCancelCreate') {
                Swal.fire(
                    'Agregado!',
                    'El registro se agrego correctamente.',
                    'success'
                )
            }else{
                Swal.fire(
                    'Editado!',
                    'El registro se editó correctamente.',
                    'success'
                )
            }
        }
        function editMovie(object) {
            //debugger;
            //console.log(object);
            var data = JSON.parse(object.dataset.model);
            console.log(data);
            $("#editForm [name='Movie.Id']").val(data.Id);
            $("#editForm [name='Movie.Title']").val(data.Title);
            $("#editForm [name='Movie.Rating']").val(data.Rating);
            $("#editForm [name='Movie.ReleaseDate']").val(data.ReleaseDate);
            $("#editForm [name='Movie.Genre']").val(data.Genre);
            $("#editForm [name='Movie.Price']").val(data.Price);
        }
        function deleteMovie(object){
            debugger;
            console.log(object);
            var data = JSON.parse(object.dataset.model);
            console.log(data);

            Swal.fire({
                title: '¿Esta seguro de eliminar este reguistro?',
                // text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Confirmar',
                cancelButtonText: 'Cancelar'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: "Movies/Delete",
                        type: 'Post',
                        async: true,
                        headers: {
                            RequestVerificationToken: "@Antiforgery.GetAndStoreTokens(Context).RequestToken"
                        },
                        data: "id=" + data.Id,
                        complete: function () {
                            hideLoading();
                        },
                        beforeSend: function () {
                            showLoading();
                        },
                        success: function (data) {
                            $('#MovieList').html(data);
                            Swal.fire(
                                'Eliminado!',
                                'El registro se eliminó correctamente.',
                                'success'
                            );
                        },
                        error: function (error) {
                            //notifyError(error.statusText);
                            console.log(error);
                            alert("Error:" + error.responseText);
                        }
                    });
                }
            });

        }
        
    </script>
}


